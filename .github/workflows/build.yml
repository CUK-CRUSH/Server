name: Java CI with Gradle

on:
  pull_request:
    branches: [ "develop" ]

permissions:
  contents: read

jobs:
  build:
    name: Build and test
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Set yml file
      uses: microsoft/variable-substitution@v1
      with:
        files: ./src/main/resources/application.yml, ./src/main/resources/application-oauth2.yml, ./src/main/resources/application-gcs.yml, ./src/main/resources/application-youtube.yml
      env:
        server.port: ${{ secrets.SERVER_PORT }}
        spring.datasource.driver-class-name: ${{ secrets.BUILD_DATASOURCE_DRIVER_CLASS_NAME }}
        spring.datasource.url: ${{ secrets.BUILD_DATASOURCE_URL }}
        spring.datasource.username: ${{ secrets.DATASOURCE_USERNAME }}
        spring.datasource.password: ${{ secrets.DATASOURCE_PASSWORD }}

        spring.security.oauth2.client.registration.google.client-id: ${{ secrets.GOOGLE_CLIENT_ID }}
        spring.security.oauth2.client.registration.google.client-secret: ${{ secrets.GOOGLE_CLIENT_SECRET }}
        spring.security.oauth2.client.registration.google.redirect-uri: ${{ secrets.GOOGLE_REDIRECT_URI }}
        spring.security.oauth2.client.registration.facebook.client-id: ${{ secrets.FACEBOOK_CLIENT_ID }}
        spring.security.oauth2.client.registration.facebook.client-secret: ${{ secrets.FACEBOOK_CLIENT_SECRET }}
        spring.security.oauth2.client.registration.facebook.redirect-uri: ${{ secrets.FACEBOOK_REDIRECT_URI }}
        spring.security.oauth2.client.registration.kakao.client-id: ${{ secrets.KAKAO_CLIENT_ID }}
        spring.security.oauth2.client.registration.kakao.client-secret: ${{ secrets.KAKAO_CLIENT_SECRET }}
        spring.security.oauth2.client.registration.kakao.redirect-uri: ${{ secrets.KAKAO_REDIRECT_URI }}

        jwt.secret: ${{ secrets.JWT_SECRET }}
        jwt.access-token-time: ${{ secrets.ACCESS_TOKEN_TIME }}
        jwt.refresh-token-time: ${{ secrets.REFRESH_TOKEN_TIME }}

        spring.cloud.gcp.storage.credentials.location: ${{ secrets.GCS_KEY_LOCATION }}
        spring.cloud.gcp.storage.project-id: ${{ secrets.GCS_PROJECT_ID }}
        spring.cloud.gcp.storage.bucket: ${{ secrets.GCS_BUCKET_NAME }}
        spring.cloud.gcp.storage.bucket-dir: ${{ secrets.GCS_BUCKET_DIR }}
        spring.cloud.gcp.storage.key-name: ${{ secrets.GCS_KEY_NAME }}

        server.ssl.key-store-password: ${{ secrets.KEYSTORE_PASSWORD }}

        react.uri: ${{ secrets.REACT_URI }}
        perspective.api-key: ${{ secrets.PERSPECTIVE_API_KEY }}
        spring.jpa.hibernate.ddl-auto: ${{ secrets.BUILD_JPA_DDL_AUTO }}

        spring.data.mongodb.uri: ${{ secrets.BUILD_MONGODB_URI }}
        spring.data.mongodb.database: ${{ secrets.BUILD_MONGODB_DATABASE }}

        admin.username: ${{ secrets.ADMIN_USERNAME }}
        admin.password: ${{ secrets.ADMIN_PASSWORD }}

        youtube.api-key1: ${{ secrets.YOUTUBE_API_KEY_1 }}
        youtube.api-key2: ${{ secrets.YOUTUBE_API_KEY_2 }}
        youtube.api-key3: ${{ secrets.YOUTUBE_API_KEY_3 }}
        youtube.api-key4: ${{ secrets.YOUTUBE_API_KEY_4 }}
        youtube.api-key5: ${{ secrets.YOUTUBE_API_KEY_5 }}
        youtube.api-key6: ${{ secrets.YOUTUBE_API_KEY_6 }}
        youtube.api-key7: ${{ secrets.YOUTUBE_API_KEY_7 }}
        youtube.api-key8: ${{ secrets.YOUTUBE_API_KEY_8 }}
        youtube.api-key9: ${{ secrets.YOUTUBE_API_KEY_9 }}
        youtube.api-key10: ${{ secrets.YOUTUBE_API_KEY_10 }}
        youtube.api-key11: ${{ secrets.YOUTUBE_API_KEY_11 }}
        youtube.api-key12: ${{ secrets.YOUTUBE_API_KEY_12 }}
        youtube.api-key13: ${{ secrets.YOUTUBE_API_KEY_13 }}
        youtube.api-key14: ${{ secrets.YOUTUBE_API_KEY_14 }}

    - name: create-json
      id: create-json
      uses: jsdaniell/create-json@v1.2.2
      with:
        name: ${{ secrets.GCS_KEY_NAME }}
        json: ${{ secrets.GCS_KEY_JSON }}
        dir: ${{ secrets.GCS_KEY_DIR_LOCATION }}

    - name: Keystore Save
      run: echo "${{ secrets.KEYSTORE }}" | base64 --decode > ./src/main/resources/keystore.p12

    - name: Run chmod to make gradlew executable
      run: chmod +x ./gradlew

    - name: Build with Gradle
      run: ./gradlew build